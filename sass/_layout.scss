.container {
    // we set used max-width so that container can decrease if there
    // is not enough space to display our 120rem,
    // if it is not enough space, container will occupy 100% of the available port width
    max-width: 120rem;
    margin: 8rem auto;
    background-color: var(--color-grey-light-1);
    box-shadow: var(--shadow-dark);

    min-height: 50rem;

    @media only screen and (max-width: $bp-largest) {
        margin: 0;
        max-width: 100%;
        width: 100%;
    }
}

.header {
    font-size: 1.4rem;
    height: 7rem;
    background-color: #fff;
    border-bottom: var(--line);

    display: flex;
    justify-content: space-between;
    align-items: center;
    @media only screen and (max-width: $bp-smallest) {
        flex-wrap: wrap;
        height: 11rem;
        // to control the space between the rows of the container
        align-content: space-around;
    }
}

.content {
    display: flex;

    @media only screen and (max-width: $bp-medium) {
        flex-direction: column;
    }
}

.sidebar {
    background-color: var(--color-grey-dark-1);
    // flex-grow, flex-shrink, flex-basis
    flex: 0 0 18%;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.hotel-view {
    // by using flex 1, we are saying that element should grow as much as it can
    flex: 1;
}

.detail {
    font-size: 1.4rem;
    display: flex;
    flex-wrap: wrap;
    padding: 4.5rem;
    background-color: var(--line);

    // when we have two media queries, we first put the one for the largest screen
    // and after that the one for the smaller screen. And that's because both of these will apply
    // because the screen at 600 pixels is also smaller than 900 pixels
    // if there is conflicting declaration we want the last one to apply

    @media only screen and (max-width: $bp-medium) {
        padding: 3rem;
    }

    @media only screen and (max-width: $bp-small) {
        flex-direction: column;
    }
}

.description {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    // 0 0  grow and shrink properties,
    //flex-basis: 60% to make an element to take 60 percent of the available width
    flex: 0 0 60%;
    margin-right: 4.5rem;

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-right: 3rem;
    }

    @media only screen and (max-width: $bp-small) {
        flex-direction: column;
        margin-right: 0;
        margin-bottom: 3rem;
    }
}

.user-reviews {
    // for an element to occupy the remaining space by setting flex to one.
    flex: 1;

    display: flex;
    flex-direction: column;
    align-items: center;
}
